{"version":3,"file":"check_settings.min.js","sources":["../src/check_settings.js"],"sourcesContent":["define(['jquery'], function($) {\n    return {\n        init: function(options) {\n            // Initialize the check settings module.\n            var defaultopts = {\n                url: 'localhost',\n                iconsuccess: '',\n                iconinfo: '',\n                iconerror: '',\n                strcheck: 'Check Moodle settings',\n                strchecking: 'Checking...',\n                strnoinfo: 'Something went wrong. Please contact your system administrator.',\n            };\n\n            var opts = $.extend({}, defaultopts, options);\n            var main = $('#admin-check_settings');\n            var checksettingsbtn = main.find('button#check_settings');\n\n            /**\n             * Render an error box with the provided content.\n             * @param {string} content\n             * @returns {*|jQuery|void}\n             */\n            function rendererrorbox(content) {\n                var box = $('<div></div>').addClass('alert-error alert local_copilot_status_message');\n                box.append(opts.iconerror);\n                box.append('<span style=\"inline-block\">' + content + '</span>');\n                return box;\n            }\n\n            /**\n             * Render an info box with the provided content.\n             * @param {string} content\n             * @returns {*|jQuery|void}\n             */\n            function renderinfobox(content) {\n                var box = $('<div></div>').addClass('alert-info alert local_copilot_status_message');\n                box.append(opts.iconinfo);\n                box.append('<span style=\"inline-block\">' + content + '</span>');\n                return box;\n            }\n\n            /**\n             * Render a success box with the provided content.\n             * @param {string} content\n             * @returns {*|jQuery|void}\n             */\n            function rendersuccessbox(content) {\n                var box = $('<div></div>').addClass('alert-success alert local_copilot_status_message');\n                box.append(opts.iconsuccess);\n                box.append('<span style=\"inline-block\">' + content + '</span>');\n                return box;\n            }\n\n            /**\n             * Update the display with the provided content.\n             * @param {string} content\n             */\n            function updatedisplay(content) {\n                main.find('#check-settings-results').html(content);\n            }\n\n            /**\n             * Render the results of the settings check.\n             * @param {Object} results - The results of the settings check.\n             */\n            function renderresults(results) {\n                var content = $('<div class=\"local_copilot_adminsetting_check_settings_results\"></div>');\n                if (results === false) {\n                    content.append(renderinfobox(opts.strnoinfo));\n                    updatedisplay(content);\n                    return true;\n                }\n                if (typeof (results.success) != 'undefined') {\n                    if (results.success === true && typeof (results.data) !== 'undefined') {\n                        results.data.errormessages.forEach(function(message) {\n                            content.append(rendererrorbox(message));\n                        });\n                        results.data.success.forEach(function(message) {\n                            content.append(rendersuccessbox(message));\n                        });\n                        results.data.info.forEach(function(message) {\n                            content.append(renderinfobox(message));\n                        });\n                        updatedisplay(content);\n                        return true;\n                    }\n                    if (results.success === false && typeof (results.data.errormessages) !== 'undefined') {\n                        results.data.errormessages.forEach(function(message) {\n                            content.append(rendererrorbox(message));\n                        });\n                        updatedisplay(content);\n                        return true;\n                    }\n                }\n\n                content.append(rendererrorbox(opts.strerrorcheck));\n                updatedisplay(content);\n                return true;\n            }\n\n            /**\n             * Check the settings by making an AJAX request to the server.\n             */\n            function checkSettings() {\n                checksettingsbtn.html(opts.strchecking);\n                $.ajax({\n                    url: opts.url,\n                    type: 'GET',\n                    data: {\n                        mode: 'check_settings'\n                    },\n                    dataType: 'json',\n                    success: function(resp) {\n                        checksettingsbtn.html(opts.strcheck);\n                        renderresults(resp);\n                    },\n                    error: function(data, errorThrown, textStatus) {\n                        checksettingsbtn.html(opts.strcheck);\n                        var content = rendererrorbox(opts.strerrorcheck + ' (' + textStatus + ')');\n                        updatedisplay(content);\n                    }\n                });\n            }\n\n            if (typeof (opts.lastresults) !== 'undefined') {\n                renderresults(opts.lastresults);\n            }\n            checksettingsbtn.on('click', function(e) {\n                e.preventDefault();\n                e.stopPropagation();\n                checkSettings();\n            });\n        }\n    };\n});"],"names":["define","$","init","options","opts","extend","url","iconsuccess","iconinfo","iconerror","strcheck","strchecking","strnoinfo","main","checksettingsbtn","find","rendererrorbox","content","box","addClass","append","renderinfobox","updatedisplay","html","renderresults","results","success","data","errormessages","forEach","message","rendersuccessbox","info","strerrorcheck","lastresults","on","e","preventDefault","stopPropagation","ajax","type","mode","dataType","resp","error","errorThrown","textStatus"],"mappings":"AAAAA,sCAAO,CAAC,UAAW,SAASC,GACxB,MAAO,CACHC,KAAM,SAASC,SAEX,IAUIC,KAAOH,EAAEI,OAAO,CAAA,EAVF,CACdC,IAAK,YACLC,YAAa,GACbC,SAAU,GACVC,UAAW,GACXC,SAAU,wBACVC,YAAa,cACbC,UAAW,mEAGsBT,SACjCU,KAAOZ,EAAE,yBACTa,iBAAmBD,KAAKE,KAAK,yBAOjC,SAASC,eAAeC,SACpB,IAAIC,IAAMjB,EAAE,eAAekB,SAAS,kDAGpC,OAFAD,IAAIE,OAAOhB,KAAKK,WAChBS,IAAIE,OAAO,8BAAgCH,QAAU,WAC9CC,GACX,CAOA,SAASG,cAAcJ,SACnB,IAAIC,IAAMjB,EAAE,eAAekB,SAAS,iDAGpC,OAFAD,IAAIE,OAAOhB,KAAKI,UAChBU,IAAIE,OAAO,8BAAgCH,QAAU,WAC9CC,GACX,CAkBA,SAASI,cAAcL,SACnBJ,KAAKE,KAAK,2BAA2BQ,KAAKN,QAC9C,CAMA,SAASO,cAAcC,SACnB,IAAIR,QAAUhB,EAAE,yEAChB,IAAgB,IAAZwB,QAGA,OAFAR,QAAQG,OAAOC,cAAcjB,KAAKQ,YAClCU,cAAcL,UACP,EAEX,QAAgC,IAApBQ,QAAQC,QAAyB,CACzC,IAAwB,IAApBD,QAAQC,cAA8C,IAAlBD,QAAQE,KAW5C,OAVAF,QAAQE,KAAKC,cAAcC,QAAQ,SAASC,SACxCb,QAAQG,OAAOJ,eAAec,SAClC,GACAL,QAAQE,KAAKD,QAAQG,QAAQ,SAASC,SAClCb,QAAQG,OAhCxB,SAA0BH,SACtB,IAAIC,IAAMjB,EAAE,eAAekB,SAAS,oDAGpC,OAFAD,IAAIE,OAAOhB,KAAKG,aAChBW,IAAIE,OAAO,8BAAgCH,QAAU,WAC9CC,GACX,CA2B+Ba,CAAiBD,SACpC,GACAL,QAAQE,KAAKK,KAAKH,QAAQ,SAASC,SAC/Bb,QAAQG,OAAOC,cAAcS,SACjC,GACAR,cAAcL,UACP,EAEX,IAAwB,IAApBQ,QAAQC,cAA6D,IAAhCD,QAAQE,KAAKC,cAKlD,OAJAH,QAAQE,KAAKC,cAAcC,QAAQ,SAASC,SACxCb,QAAQG,OAAOJ,eAAec,SAClC,GACAR,cAAcL,UACP,CAEf,CAIA,OAFAA,QAAQG,OAAOJ,eAAeZ,KAAK6B,gBACnCX,cAAcL,UACP,CACX,MA0BkC,IAAtBb,KAAK8B,aACbV,cAAcpB,KAAK8B,aAEvBpB,iBAAiBqB,GAAG,QAAS,SAASC,GAClCA,EAAEC,iBACFD,EAAEE,kBAzBFxB,iBAAiBS,KAAKnB,KAAKO,aAC3BV,EAAEsC,KAAK,CACHjC,IAAKF,KAAKE,IACVkC,KAAM,MACNb,KAAM,CACFc,KAAM,kBAEVC,SAAU,OACVhB,QAAS,SAASiB,MACd7B,iBAAiBS,KAAKnB,KAAKM,UAC3Bc,cAAcmB,KACjB,EACDC,MAAO,SAASjB,KAAMkB,YAAaC,YAC/BhC,iBAAiBS,KAAKnB,KAAKM,UAE3BY,cADcN,eAAeZ,KAAK6B,cAAgB,KAAOa,WAAa,KAE1E,GAWR,EACJ,EAER"}